// <auto-generated />
using System;
using EFProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFProject.Migrations
{
    [DbContext(typeof(TrackerContext))]
    [Migration("20250126114450_deletefk")]
    partial class deletefk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFProject.Models.Mood", b =>
                {
                    b.Property<int>("MoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoodId"));

                    b.Property<string>("Moodtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserMoodMoodId")
                        .HasColumnType("int");

                    b.HasKey("MoodId");

                    b.HasIndex("UserMoodMoodId");

                    b.ToTable("Mood");
                });

            modelBuilder.Entity("EFProject.Models.Recommendations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("moodid")
                        .HasColumnType("int");

                    b.Property<string>("recommend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("moodid");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("EFProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EFProject.Models.UserMood", b =>
                {
                    b.Property<int>("MoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoodId"));

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Intensity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MoodDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Moodtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trigger")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MoodId");

                    b.ToTable("UserMoods");
                });

            modelBuilder.Entity("RecommendationsUser", b =>
                {
                    b.Property<int>("RecommId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RecommId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RecommendationsUser");
                });

            modelBuilder.Entity("EFProject.Models.Mood", b =>
                {
                    b.HasOne("EFProject.Models.UserMood", null)
                        .WithMany("Moods")
                        .HasForeignKey("UserMoodMoodId");
                });

            modelBuilder.Entity("EFProject.Models.Recommendations", b =>
                {
                    b.HasOne("EFProject.Models.Mood", "Mood")
                        .WithMany("Recommendations")
                        .HasForeignKey("moodid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("RecommendationsUser", b =>
                {
                    b.HasOne("EFProject.Models.Recommendations", null)
                        .WithMany()
                        .HasForeignKey("RecommId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFProject.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFProject.Models.Mood", b =>
                {
                    b.Navigation("Recommendations");
                });

            modelBuilder.Entity("EFProject.Models.UserMood", b =>
                {
                    b.Navigation("Moods");
                });
#pragma warning restore 612, 618
        }
    }
}
